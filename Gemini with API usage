import google.generativeai as genai

class NLPModel():
    def get_model(self):
        GOOGLE_API_KEY = ""
        try:
            genai.configure(api_key=GOOGLE_API_KEY)
            model = genai.GenerativeModel("gemini-1.5-pro")
            return model
        except Exception as e:
            print(e)
            

    

class NLPApp(NLPModel):
    def __init__(self):
        self.__database = {}
        self.first_menu()


    def first_menu(self):
        first_input = input(""" 
        Hi! How would you like to proceed
        1. Not a memeber? Register
        2. Already a member? login
        3. exit
        """)
        
        if first_input == "1":
            #register
            self.__register()

        elif first_input == "2":
            #login
            self.__login()
        else:
            exit()

    def second_menu(self):
        second_input = input(""" 
        Hi! How would you like to proceed?
        1. sentiment analysis
        2. language translation
        3. language detection
        4. Summarize
        """)
        if second_input == "1":
            #sentiment analysis
            self.__sentiment_analysis()

        elif second_input == "2":
            #language translation
            self.__language_translation()

        elif second_input ==  "3":
            #language detection
            self.__language_detection()

        elif second_input == "4":
            #summarize
            self.__summarize_text()

        else:
            exit()


    def __register(self):
        name = input("enter your name: ")
        email = input("enter your email: ")
        password = input("enter your password: ")

        if email in self.__database:
            print("email is already present")
            self.first_menu()
        else:
            self.__database[email] = [name, password]
            print("registration successful. Now you can login")
            #print(self.__database)
            self.first_menu()


    def __login(self):
        email = input("enter your email: ")
        password = input("enter your password: ")
        if email in self.__database:
            if self.__database[email][1] == password:
                print("login successfull")
                self.second_menu()
            else:
                print("password is incorrect")
                self.__login()
        else:
            print("email not found. Please create the accout first")
            self.first_menu()

    def __sentiment_analysis(self):
        user_text = input("enter your text: ")
        model = super().get_model()
        response = model.generate_content(f"Give me the sentiment of this sentence: {user_text}")
        results = response.text
        print(results)
        self.second_menu()

    def __language_translation(self):
        user_text = input("enter your text: ")
        model = super().get_model()
        response = model.generate_content(f"Give me the language translation of this sentence: {user_text}")
        results = response.text
        print(results)
        self.second_menu()

    def __language_detection(self):
        user_text = input("enter your text: ")
        model = super().get_model()
        response = model.generate_content(f"Give me the language detection of this sentence: {user_text}")
        results = response.text
        print(results)
        self.second_menu()

    def __summarize_text(self):
        user_text = input("enter your text: ")
        model = super().get_model()
        response = model.generate_content(f"Give me the summarized version of this sentence: {user_text}")
        results = response.text
        print(results)
        self.second_menu()





if __name__ == '__main__':
    nlp = NLPApp()
